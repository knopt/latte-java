package Latte.Absyn; // Java Package generated by the BNF Converter.

import java.util.function.Function;

public class ArrayType extends Type implements Positioned {

    @Override
    public String getPosition() {
        return "(" + line_num + ", " + col_num + ")";
    }

    public final TypeName typename_;
    public final ListEmptyBracket listemptybracket_;
    public int line_num, col_num, offset;

    public ArrayType(TypeName p1, ListEmptyBracket p2) {
        typename_ = p1;
        listemptybracket_ = p2;
    }

    public boolean equals(Object o) {
        if (this == o) return true;
        if (o instanceof ArrayType) {
            ArrayType x = (ArrayType) o;
            return this.typename_.equals(x.typename_) && this.listemptybracket_.equals(x.listemptybracket_);
        }
        return false;
    }

    public int hashCode() {
        return 37 * (this.typename_.hashCode()) + this.listemptybracket_.hashCode();
    }


    public <T> T match(Function<ArrayType, T> arrayType,
                       Function<TypeNameS, T> typeNameS) {
        return arrayType.apply(this);
    }
}
