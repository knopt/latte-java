package Latte.Absyn; // Java Package generated by the BNF Converter.

import java.util.function.Function;

public class CondElse extends Stmt implements Positioned {

    @Override
    public String getPosition() {
        return "(" + line_num + ", " + col_num + ")";
    }


    public final Expr expr_;
    public final Stmt stmt_1, stmt_2;
    public int line_num, col_num, offset;

    public CondElse(Expr p1, Stmt p2, Stmt p3) {
        expr_ = p1;
        stmt_1 = p2;
        stmt_2 = p3;
    }

    public boolean equals(Object o) {
        if (this == o) return true;
        if (o instanceof CondElse) {
            CondElse x = (CondElse) o;
            return this.expr_.equals(x.expr_) && this.stmt_1.equals(x.stmt_1) && this.stmt_2.equals(x.stmt_2);
        }
        return false;
    }

    public int hashCode() {
        return 37 * (37 * (this.expr_.hashCode()) + this.stmt_1.hashCode()) + this.stmt_2.hashCode();
    }

    public <T> T match(Function<Empty, T> empty,
                       Function<BStmt, T> bStmt,
                       Function<Decl, T> decl,
                       Function<Ass, T> ass,
                       Function<Incr, T> incr,
                       Function<Decr, T> decr,
                       Function<Ret, T> ret,
                       Function<VRet, T> vRet,
                       Function<Cond, T> cond,
                       Function<CondElse, T> condElse,
                       Function<While, T> sWhile,
                       Function<SExp, T> sExp) {
        return condElse.apply(this);
    }

}
