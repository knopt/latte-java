package Latte.Absyn; // Java Package generated by the BNF Converter.

import java.util.function.Function;

public class Incr  extends Stmt implements Positioned {

    @Override
    public String getPosition() {
        return "(" + line_num + ", " + col_num + ")";
    }


    public final Lhs lhs_;
    public int line_num, col_num, offset;
    public Incr(Lhs p1) { lhs_ = p1; }

    public boolean equals(Object o) {
        if (this == o) return true;
        if (o instanceof Latte.Absyn.Incr) {
            Latte.Absyn.Incr x = (Latte.Absyn.Incr)o;
            return this.lhs_.equals(x.lhs_);
        }
        return false;
    }

    public int hashCode() {
        return this.lhs_.hashCode();
    }


    public <T> T match(Function<Empty, T> empty,
                       Function<BStmt, T> bStmt,
                       Function<Decl, T> decl,
                       Function<Ass, T> ass,
                       Function<Incr, T> incr,
                       Function<Decr, T> decr,
                       Function<Ret, T> ret,
                       Function<VRet, T> vRet,
                       Function<Cond, T> cond,
                       Function<CondElse, T> condElse,
                       Function<While, T> sWhile,
                       Function<SExp, T> sExp) {
        return incr.apply(this);
    }
}
