package Latte.Absyn; // Java Package generated by the BNF Converter.

import java.util.function.Function;

public class While extends Stmt {
    public final Expr expr_;
    public final Stmt stmt_;
    public int line_num, col_num, offset;

    public While(Expr p1, Stmt p2) {
        expr_ = p1;
        stmt_ = p2;
    }

    public boolean equals(Object o) {
        if (this == o) return true;
        if (o instanceof While) {
            While x = (While) o;
            return this.expr_.equals(x.expr_) && this.stmt_.equals(x.stmt_);
        }
        return false;
    }

    public int hashCode() {
        return 37 * (this.expr_.hashCode()) + this.stmt_.hashCode();
    }

    public <T> T match(Function<Empty, T> empty,
                       Function<BStmt, T> bStmt,
                       Function<Decl, T> decl,
                       Function<Ass, T> ass,
                       Function<Incr, T> incr,
                       Function<Decr, T> decr,
                       Function<Ret, T> ret,
                       Function<VRet, T> vRet,
                       Function<Cond, T> cond,
                       Function<CondElse, T> condElse,
                       Function<While, T> sWhile,
                       Function<SExp, T> sExp) {
        return sWhile.apply(this);
    }
}
