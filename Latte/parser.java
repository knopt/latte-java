
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Latte;

import java_cup.runtime.ComplexSymbolFactory.Location;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\144\000\002\002\004\000\002\002\003\000\002\003" +
    "\010\000\002\003\006\000\002\004\003\000\002\004\004" +
    "\000\002\005\004\000\002\006\002\000\002\006\003\000" +
    "\002\006\005\000\002\007\004\000\002\007\004\000\002" +
    "\010\006\000\002\010\011\000\002\011\002\000\002\011" +
    "\004\000\002\012\003\000\002\012\003\000\002\013\003" +
    "\000\002\013\003\000\002\013\003\000\002\013\003\000" +
    "\002\013\002\000\002\014\002\000\002\014\004\000\002" +
    "\015\005\000\002\016\002\000\002\016\004\000\002\017" +
    "\003\000\002\017\003\000\002\017\005\000\002\017\006" +
    "\000\002\017\005\000\002\017\005\000\002\017\005\000" +
    "\002\017\004\000\002\017\007\000\002\017\011\000\002" +
    "\017\007\000\002\017\004\000\002\020\003\000\002\020" +
    "\005\000\002\021\003\000\002\021\005\000\002\022\003" +
    "\000\002\022\006\000\002\023\003\000\002\023\003\000" +
    "\002\023\003\000\002\023\003\000\002\024\003\000\002" +
    "\024\003\000\002\025\004\000\002\025\003\000\002\026" +
    "\002\000\002\026\003\000\002\026\005\000\002\027\003" +
    "\000\002\027\003\000\002\027\003\000\002\027\003\000" +
    "\002\027\003\000\002\027\003\000\002\027\006\000\002" +
    "\027\003\000\002\027\004\000\002\027\005\000\002\030" +
    "\007\000\002\030\006\000\002\030\003\000\002\031\004" +
    "\000\002\031\004\000\002\031\004\000\002\031\003\000" +
    "\002\032\005\000\002\032\003\000\002\033\005\000\002" +
    "\033\003\000\002\034\005\000\002\034\003\000\002\035" +
    "\005\000\002\035\003\000\002\036\005\000\002\036\003" +
    "\000\002\037\002\000\002\037\003\000\002\037\005\000" +
    "\002\040\004\000\002\040\007\000\002\041\003\000\002" +
    "\041\003\000\002\042\003\000\002\042\003\000\002\042" +
    "\003\000\002\043\003\000\002\043\003\000\002\043\003" +
    "\000\002\043\003\000\002\043\003\000\002\043\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\235\000\020\037\011\040\007\045\021\046\020\055" +
    "\017\060\015\064\016\001\002\000\004\064\233\001\002" +
    "\000\004\002\232\001\002\000\004\002\000\001\002\000" +
    "\004\064\231\001\002\000\022\002\ufffd\037\011\040\007" +
    "\045\021\046\020\055\017\060\015\064\016\001\002\000" +
    "\006\017\uffd1\064\uffd1\001\002\000\004\006\024\001\002" +
    "\000\006\017\uffcf\064\uffcf\001\002\000\006\017\023\064" +
    "\uffcc\001\002\000\006\017\uffd0\064\uffd0\001\002\000\006" +
    "\017\uffce\064\uffce\001\002\000\006\017\uffd2\064\uffd2\001" +
    "\002\000\004\064\022\001\002\000\006\017\uffd3\064\uffd3" +
    "\001\002\000\004\006\ufff6\001\002\000\004\064\uffcd\001" +
    "\002\000\026\007\ufff3\037\ufff3\043\ufff3\045\ufff3\051\ufff3" +
    "\052\ufff3\054\ufff3\055\ufff3\060\ufff3\064\ufff3\001\002\000" +
    "\026\007\026\037\uffeb\043\030\045\uffeb\051\034\052\033" +
    "\054\031\055\uffeb\060\uffeb\064\uffeb\001\002\000\022\002" +
    "\ufffe\037\ufffe\040\ufffe\045\ufffe\046\ufffe\055\ufffe\060\ufffe" +
    "\064\ufffe\001\002\000\014\037\011\045\021\055\017\060" +
    "\015\064\016\001\002\000\014\037\uffef\045\uffef\055\uffef" +
    "\060\uffef\064\uffef\001\002\000\014\037\uffec\045\uffec\055" +
    "\uffec\060\uffec\064\uffec\001\002\000\026\007\ufff2\037\ufff2" +
    "\043\ufff2\045\ufff2\051\ufff2\052\ufff2\054\ufff2\055\ufff2\060" +
    "\ufff2\064\ufff2\001\002\000\014\037\uffee\045\uffee\055\uffee" +
    "\060\uffee\064\uffee\001\002\000\014\037\uffed\045\uffed\055" +
    "\uffed\060\uffed\064\uffed\001\002\000\004\064\037\001\002" +
    "\000\006\010\226\011\uffd7\001\002\000\012\004\042\010" +
    "\uffd9\011\uffd9\012\043\001\002\000\004\011\041\001\002" +
    "\000\026\007\ufff5\037\ufff5\043\ufff5\045\ufff5\051\ufff5\052" +
    "\ufff5\054\ufff5\055\ufff5\060\ufff5\064\ufff5\001\002\000\016" +
    "\005\ufffa\037\011\045\021\055\017\060\015\064\016\001" +
    "\002\000\030\004\066\020\063\021\062\042\057\047\050" +
    "\050\044\056\065\057\064\062\047\063\045\064\053\001" +
    "\002\000\050\005\uffc3\010\uffc3\011\uffc3\015\uffc3\016\uffc3" +
    "\020\uffc3\022\uffc3\023\uffc3\024\uffc3\025\uffc3\026\uffc3\027" +
    "\uffc3\030\uffc3\031\uffc3\032\uffc3\033\uffc3\034\uffc3\035\uffc3" +
    "\036\uffc3\001\002\000\050\005\uffc7\010\uffc7\011\uffc7\015" +
    "\uffc7\016\uffc7\020\uffc7\022\uffc7\023\uffc7\024\uffc7\025\uffc7" +
    "\026\uffc7\027\uffc7\030\uffc7\031\uffc7\032\uffc7\033\uffc7\034" +
    "\uffc7\035\uffc7\036\uffc7\001\002\000\050\005\uffbc\010\uffbc" +
    "\011\uffbc\015\uffbc\016\uffbc\020\uffbc\022\uffbc\023\uffbc\024" +
    "\uffbc\025\uffbc\026\uffbc\027\uffbc\030\uffbc\031\uffbc\032\uffbc" +
    "\033\uffbc\034\uffbc\035\uffbc\036\uffbc\001\002\000\050\005" +
    "\uffc1\010\uffc1\011\uffc1\015\uffc1\016\uffc1\020\uffc1\022\uffc1" +
    "\023\uffc1\024\uffc1\025\uffc1\026\uffc1\027\uffc1\030\uffc1\031" +
    "\uffc1\032\uffc1\033\uffc1\034\uffc1\035\uffc1\036\uffc1\001\002" +
    "\000\004\064\140\001\002\000\050\005\uffb8\010\uffb8\011" +
    "\uffb8\015\uffb8\016\uffb8\020\uffb8\022\uffb8\023\uffb8\024\uffb8" +
    "\025\uffb8\026\uffb8\027\uffb8\030\uffb8\031\uffb8\032\uffb8\033" +
    "\uffb8\034\uffb8\035\uffb8\036\uffb8\001\002\000\050\005\uffb6" +
    "\010\uffb6\011\uffb6\015\uffb6\016\uffb6\020\uffb6\022\uffb6\023" +
    "\uffb6\024\uffb6\025\uffb6\026\uffb6\027\uffb6\030\uffb6\031\uffb6" +
    "\032\uffb6\033\uffb6\034\uffb6\035\uffb6\036\uffb6\001\002\000" +
    "\052\004\135\005\uffc8\010\uffc8\011\uffc8\015\uffc8\016\uffc8" +
    "\020\uffc8\022\uffc8\023\uffc8\024\uffc8\025\uffc8\026\uffc8\027" +
    "\uffc8\030\uffc8\031\uffc8\032\uffc8\033\uffc8\034\uffc8\035\uffc8" +
    "\036\uffc8\001\002\000\050\005\uffb4\010\uffb4\011\uffb4\015" +
    "\uffb4\016\uffb4\020\uffb4\022\uffb4\023\uffb4\024\uffb4\025\uffb4" +
    "\026\132\027\130\030\131\031\uffb4\032\uffb4\033\uffb4\034" +
    "\uffb4\035\uffb4\036\uffb4\001\002\000\042\005\uffb2\010\uffb2" +
    "\011\uffb2\015\uffb2\016\uffb2\020\125\022\uffb2\023\uffb2\024" +
    "\uffb2\025\124\031\uffb2\032\uffb2\033\uffb2\034\uffb2\035\uffb2" +
    "\036\uffb2\001\002\000\036\005\uffb0\010\uffb0\011\uffb0\015" +
    "\uffb0\016\uffb0\022\116\023\uffb0\024\uffb0\031\114\032\112" +
    "\033\121\034\120\035\117\036\115\001\002\000\050\005" +
    "\uffc5\010\uffc5\011\uffc5\015\uffc5\016\uffc5\020\uffc5\022\uffc5" +
    "\023\uffc5\024\uffc5\025\uffc5\026\uffc5\027\uffc5\030\uffc5\031" +
    "\uffc5\032\uffc5\033\uffc5\034\uffc5\035\uffc5\036\uffc5\001\002" +
    "\000\020\005\uffae\010\uffae\011\uffae\015\uffae\016\uffae\023" +
    "\110\024\uffae\001\002\000\012\010\uffd8\011\uffd8\015\072" +
    "\024\071\001\002\000\030\004\066\020\063\021\062\042" +
    "\057\047\050\050\044\056\065\057\064\062\047\063\045" +
    "\064\053\001\002\000\030\004\066\020\063\021\062\042" +
    "\057\047\050\050\044\056\065\057\064\062\047\063\045" +
    "\064\053\001\002\000\050\005\uffc6\010\uffc6\011\uffc6\015" +
    "\uffc6\016\uffc6\020\uffc6\022\uffc6\023\uffc6\024\uffc6\025\uffc6" +
    "\026\uffc6\027\uffc6\030\uffc6\031\uffc6\032\uffc6\033\uffc6\034" +
    "\uffc6\035\uffc6\036\uffc6\001\002\000\050\005\uffc4\010\uffc4" +
    "\011\uffc4\015\uffc4\016\uffc4\020\uffc4\022\uffc4\023\uffc4\024" +
    "\uffc4\025\uffc4\026\uffc4\027\uffc4\030\uffc4\031\uffc4\032\uffc4" +
    "\033\uffc4\034\uffc4\035\uffc4\036\uffc4\001\002\000\030\004" +
    "\066\020\063\021\062\042\057\047\050\050\044\056\065" +
    "\057\064\062\047\063\045\064\053\001\002\000\010\005" +
    "\070\015\072\024\071\001\002\000\050\005\uffbf\010\uffbf" +
    "\011\uffbf\015\uffbf\016\uffbf\020\uffbf\022\uffbf\023\uffbf\024" +
    "\uffbf\025\uffbf\026\uffbf\027\uffbf\030\uffbf\031\uffbf\032\uffbf" +
    "\033\uffbf\034\uffbf\035\uffbf\036\uffbf\001\002\000\004\064" +
    "\076\001\002\000\030\004\066\020\063\021\062\042\057" +
    "\047\050\050\044\056\065\057\064\062\047\063\045\064" +
    "\053\001\002\000\050\005\uffbb\010\uffbb\011\uffbb\015\uffbb" +
    "\016\uffbb\020\uffbb\022\uffbb\023\uffbb\024\uffbb\025\uffbb\026" +
    "\uffbb\027\uffbb\030\uffbb\031\uffbb\032\uffbb\033\uffbb\034\uffbb" +
    "\035\uffbb\036\uffbb\001\002\000\010\015\072\016\075\024" +
    "\071\001\002\000\050\005\uffbd\010\uffbd\011\uffbd\015\uffbd" +
    "\016\uffbd\020\uffbd\022\uffbd\023\uffbd\024\uffbd\025\uffbd\026" +
    "\uffbd\027\uffbd\030\uffbd\031\uffbd\032\uffbd\033\uffbd\034\uffbd" +
    "\035\uffbd\036\uffbd\001\002\000\052\004\077\005\uffaa\010" +
    "\uffaa\011\uffaa\015\uffaa\016\uffaa\020\uffaa\022\uffaa\023\uffaa" +
    "\024\uffaa\025\uffaa\026\uffaa\027\uffaa\030\uffaa\031\uffaa\032" +
    "\uffaa\033\uffaa\034\uffaa\035\uffaa\036\uffaa\001\002\000\032" +
    "\004\066\005\uffad\020\063\021\062\042\057\047\050\050" +
    "\044\056\065\057\064\062\047\063\045\064\053\001\002" +
    "\000\012\005\uffac\010\103\015\072\024\071\001\002\000" +
    "\004\005\102\001\002\000\050\005\uffa9\010\uffa9\011\uffa9" +
    "\015\uffa9\016\uffa9\020\uffa9\022\uffa9\023\uffa9\024\uffa9\025" +
    "\uffa9\026\uffa9\027\uffa9\030\uffa9\031\uffa9\032\uffa9\033\uffa9" +
    "\034\uffa9\035\uffa9\036\uffa9\001\002\000\032\004\066\005" +
    "\uffad\020\063\021\062\042\057\047\050\050\044\056\065" +
    "\057\064\062\047\063\045\064\053\001\002\000\004\005" +
    "\uffab\001\002\000\050\005\uffba\010\uffba\011\uffba\015\uffba" +
    "\016\uffba\020\uffba\022\uffba\023\uffba\024\uffba\025\uffba\026" +
    "\uffba\027\uffba\030\uffba\031\uffba\032\uffba\033\uffba\034\uffba" +
    "\035\uffba\036\uffba\001\002\000\006\015\072\024\071\001" +
    "\002\000\050\005\uffb9\010\uffb9\011\uffb9\015\uffb9\016\uffb9" +
    "\020\uffb9\022\uffb9\023\uffb9\024\uffb9\025\uffb9\026\uffb9\027" +
    "\uffb9\030\uffb9\031\uffb9\032\uffb9\033\uffb9\034\uffb9\035\uffb9" +
    "\036\uffb9\001\002\000\030\004\066\020\063\021\062\042" +
    "\057\047\050\050\044\056\065\057\064\062\047\063\045" +
    "\064\053\001\002\000\016\005\uffaf\010\uffaf\011\uffaf\015" +
    "\072\016\uffaf\024\071\001\002\000\030\004\uffa2\020\uffa2" +
    "\021\uffa2\042\uffa2\047\uffa2\050\uffa2\056\uffa2\057\uffa2\062" +
    "\uffa2\063\uffa2\064\uffa2\001\002\000\030\004\066\020\063" +
    "\021\062\042\057\047\050\050\044\056\065\057\064\062" +
    "\047\063\045\064\053\001\002\000\030\004\uffa3\020\uffa3" +
    "\021\uffa3\042\uffa3\047\uffa3\050\uffa3\056\uffa3\057\uffa3\062" +
    "\uffa3\063\uffa3\064\uffa3\001\002\000\030\004\uff9e\020\uff9e" +
    "\021\uff9e\042\uff9e\047\uff9e\050\uff9e\056\uff9e\057\uff9e\062" +
    "\uff9e\063\uff9e\064\uff9e\001\002\000\030\004\066\020\063" +
    "\021\062\042\057\047\050\050\044\056\065\057\064\062" +
    "\047\063\045\064\053\001\002\000\030\004\uff9f\020\uff9f" +
    "\021\uff9f\042\uff9f\047\uff9f\050\uff9f\056\uff9f\057\uff9f\062" +
    "\uff9f\063\uff9f\064\uff9f\001\002\000\030\004\uffa0\020\uffa0" +
    "\021\uffa0\042\uffa0\047\uffa0\050\uffa0\056\uffa0\057\uffa0\062" +
    "\uffa0\063\uffa0\064\uffa0\001\002\000\030\004\uffa1\020\uffa1" +
    "\021\uffa1\042\uffa1\047\uffa1\050\uffa1\056\uffa1\057\uffa1\062" +
    "\uffa1\063\uffa1\064\uffa1\001\002\000\020\005\uffb1\010\uffb1" +
    "\011\uffb1\015\uffb1\016\uffb1\023\110\024\uffb1\001\002\000" +
    "\042\005\uffb3\010\uffb3\011\uffb3\015\uffb3\016\uffb3\020\125" +
    "\022\uffb3\023\uffb3\024\uffb3\025\124\031\uffb3\032\uffb3\033" +
    "\uffb3\034\uffb3\035\uffb3\036\uffb3\001\002\000\030\004\uffa8" +
    "\020\uffa8\021\uffa8\042\uffa8\047\uffa8\050\uffa8\056\uffa8\057" +
    "\uffa8\062\uffa8\063\uffa8\064\uffa8\001\002\000\030\004\uffa7" +
    "\020\uffa7\021\uffa7\042\uffa7\047\uffa7\050\uffa7\056\uffa7\057" +
    "\uffa7\062\uffa7\063\uffa7\064\uffa7\001\002\000\030\004\066" +
    "\020\063\021\062\042\057\047\050\050\044\056\065\057" +
    "\064\062\047\063\045\064\053\001\002\000\050\005\uffb5" +
    "\010\uffb5\011\uffb5\015\uffb5\016\uffb5\020\uffb5\022\uffb5\023" +
    "\uffb5\024\uffb5\025\uffb5\026\132\027\130\030\131\031\uffb5" +
    "\032\uffb5\033\uffb5\034\uffb5\035\uffb5\036\uffb5\001\002\000" +
    "\030\004\uffa5\020\uffa5\021\uffa5\042\uffa5\047\uffa5\050\uffa5" +
    "\056\uffa5\057\uffa5\062\uffa5\063\uffa5\064\uffa5\001\002\000" +
    "\030\004\uffa4\020\uffa4\021\uffa4\042\uffa4\047\uffa4\050\uffa4" +
    "\056\uffa4\057\uffa4\062\uffa4\063\uffa4\064\uffa4\001\002\000" +
    "\030\004\uffa6\020\uffa6\021\uffa6\042\uffa6\047\uffa6\050\uffa6" +
    "\056\uffa6\057\uffa6\062\uffa6\063\uffa6\064\uffa6\001\002\000" +
    "\030\004\066\020\063\021\062\042\057\047\050\050\044" +
    "\056\065\057\064\062\047\063\045\064\053\001\002\000" +
    "\050\005\uffb7\010\uffb7\011\uffb7\015\uffb7\016\uffb7\020\uffb7" +
    "\022\uffb7\023\uffb7\024\uffb7\025\uffb7\026\uffb7\027\uffb7\030" +
    "\uffb7\031\uffb7\032\uffb7\033\uffb7\034\uffb7\035\uffb7\036\uffb7" +
    "\001\002\000\032\004\066\005\uffad\020\063\021\062\042" +
    "\057\047\050\050\044\056\065\057\064\062\047\063\045" +
    "\064\053\001\002\000\004\005\137\001\002\000\050\005" +
    "\uffc2\010\uffc2\011\uffc2\015\uffc2\016\uffc2\020\uffc2\022\uffc2" +
    "\023\uffc2\024\uffc2\025\uffc2\026\uffc2\027\uffc2\030\uffc2\031" +
    "\uffc2\032\uffc2\033\uffc2\034\uffc2\035\uffc2\036\uffc2\001\002" +
    "\000\050\005\uffc0\010\uffc0\011\uffc0\015\141\016\uffc0\020" +
    "\uffc0\022\uffc0\023\uffc0\024\uffc0\025\uffc0\026\uffc0\027\uffc0" +
    "\030\uffc0\031\uffc0\032\uffc0\033\uffc0\034\uffc0\035\uffc0\036" +
    "\uffc0\001\002\000\030\004\066\020\063\021\062\042\057" +
    "\047\050\050\044\056\065\057\064\062\047\063\045\064" +
    "\053\001\002\000\010\015\072\016\143\024\071\001\002" +
    "\000\050\005\uffbe\010\uffbe\011\uffbe\015\uffbe\016\uffbe\020" +
    "\uffbe\022\uffbe\023\uffbe\024\uffbe\025\uffbe\026\uffbe\027\uffbe" +
    "\030\uffbe\031\uffbe\032\uffbe\033\uffbe\034\uffbe\035\uffbe\036" +
    "\uffbe\001\002\000\004\064\225\001\002\000\004\005\151" +
    "\001\002\000\006\005\ufff9\010\147\001\002\000\016\005" +
    "\ufffa\037\011\045\021\055\017\060\015\064\016\001\002" +
    "\000\004\005\ufff8\001\002\000\006\006\152\011\155\001" +
    "\002\000\054\004\uffe7\006\uffe7\007\uffe7\011\uffe7\020\uffe7" +
    "\021\uffe7\037\uffe7\042\uffe7\044\uffe7\045\uffe7\047\uffe7\050" +
    "\uffe7\053\uffe7\055\uffe7\056\uffe7\057\uffe7\060\uffe7\061\uffe7" +
    "\062\uffe7\063\uffe7\064\uffe7\001\002\000\026\007\ufff0\037" +
    "\ufff0\043\ufff0\045\ufff0\051\ufff0\052\ufff0\054\ufff0\055\ufff0" +
    "\060\ufff0\064\ufff0\001\002\000\026\007\ufff4\037\ufff4\043" +
    "\ufff4\045\ufff4\051\ufff4\052\ufff4\054\ufff4\055\ufff4\060\ufff4" +
    "\064\ufff4\001\002\000\026\007\ufff1\037\ufff1\043\ufff1\045" +
    "\ufff1\051\ufff1\052\ufff1\054\ufff1\055\ufff1\060\ufff1\064\ufff1" +
    "\001\002\000\054\004\066\006\152\007\166\011\165\020" +
    "\063\021\062\037\011\042\057\044\160\045\021\047\050" +
    "\050\044\053\170\055\017\056\065\057\064\060\015\061" +
    "\163\062\047\063\045\064\157\001\002\000\056\004\135" +
    "\011\uffc8\012\uffd5\013\uffd5\014\uffd5\015\222\017\uffce\020" +
    "\uffc8\022\uffc8\023\uffc8\024\uffc8\025\uffc8\026\uffc8\027\uffc8" +
    "\030\uffc8\031\uffc8\032\uffc8\033\uffc8\034\uffc8\035\uffc8\036" +
    "\uffc8\064\uffce\001\002\000\004\004\214\001\002\000\054" +
    "\004\uffe6\006\uffe6\007\uffe6\011\uffe6\020\uffe6\021\uffe6\037" +
    "\uffe6\042\uffe6\044\uffe6\045\uffe6\047\uffe6\050\uffe6\053\uffe6" +
    "\055\uffe6\056\uffe6\057\uffe6\060\uffe6\061\uffe6\062\uffe6\063" +
    "\uffe6\064\uffe6\001\002\000\010\011\213\015\072\024\071" +
    "\001\002\000\004\004\207\001\002\000\004\064\204\001" +
    "\002\000\056\004\uffe5\006\uffe5\007\uffe5\011\uffe5\020\uffe5" +
    "\021\uffe5\037\uffe5\041\uffe5\042\uffe5\044\uffe5\045\uffe5\047" +
    "\uffe5\050\uffe5\053\uffe5\055\uffe5\056\uffe5\057\uffe5\060\uffe5" +
    "\061\uffe5\062\uffe5\063\uffe5\064\uffe5\001\002\000\074\002" +
    "\uffe8\004\uffe8\006\uffe8\007\uffe8\011\uffe8\020\uffe8\021\uffe8" +
    "\037\uffe8\040\uffe8\041\uffe8\042\uffe8\043\uffe8\044\uffe8\045" +
    "\uffe8\046\uffe8\047\uffe8\050\uffe8\051\uffe8\052\uffe8\053\uffe8" +
    "\054\uffe8\055\uffe8\056\uffe8\057\uffe8\060\uffe8\061\uffe8\062" +
    "\uffe8\063\uffe8\064\uffe8\001\002\000\056\004\uffe4\006\uffe4" +
    "\007\uffe4\011\uffe4\020\uffe4\021\uffe4\037\uffe4\041\uffe4\042" +
    "\uffe4\044\uffe4\045\uffe4\047\uffe4\050\uffe4\053\uffe4\055\uffe4" +
    "\056\uffe4\057\uffe4\060\uffe4\061\uffe4\062\uffe4\063\uffe4\064" +
    "\uffe4\001\002\000\032\004\066\011\202\020\063\021\062" +
    "\042\057\047\050\050\044\056\065\057\064\062\047\063" +
    "\045\064\053\001\002\000\010\012\174\013\173\014\172" +
    "\001\002\000\004\011\200\001\002\000\004\011\177\001" +
    "\002\000\030\004\066\020\063\021\062\042\057\047\050" +
    "\050\044\056\065\057\064\062\047\063\045\064\053\001" +
    "\002\000\010\011\176\015\072\024\071\001\002\000\056" +
    "\004\uffe2\006\uffe2\007\uffe2\011\uffe2\020\uffe2\021\uffe2\037" +
    "\uffe2\041\uffe2\042\uffe2\044\uffe2\045\uffe2\047\uffe2\050\uffe2" +
    "\053\uffe2\055\uffe2\056\uffe2\057\uffe2\060\uffe2\061\uffe2\062" +
    "\uffe2\063\uffe2\064\uffe2\001\002\000\056\004\uffe1\006\uffe1" +
    "\007\uffe1\011\uffe1\020\uffe1\021\uffe1\037\uffe1\041\uffe1\042" +
    "\uffe1\044\uffe1\045\uffe1\047\uffe1\050\uffe1\053\uffe1\055\uffe1" +
    "\056\uffe1\057\uffe1\060\uffe1\061\uffe1\062\uffe1\063\uffe1\064" +
    "\uffe1\001\002\000\056\004\uffe0\006\uffe0\007\uffe0\011\uffe0" +
    "\020\uffe0\021\uffe0\037\uffe0\041\uffe0\042\uffe0\044\uffe0\045" +
    "\uffe0\047\uffe0\050\uffe0\053\uffe0\055\uffe0\056\uffe0\057\uffe0" +
    "\060\uffe0\061\uffe0\062\uffe0\063\uffe0\064\uffe0\001\002\000" +
    "\010\011\203\015\072\024\071\001\002\000\056\004\uffde" +
    "\006\uffde\007\uffde\011\uffde\020\uffde\021\uffde\037\uffde\041" +
    "\uffde\042\uffde\044\uffde\045\uffde\047\uffde\050\uffde\053\uffde" +
    "\055\uffde\056\uffde\057\uffde\060\uffde\061\uffde\062\uffde\063" +
    "\uffde\064\uffde\001\002\000\056\004\uffdf\006\uffdf\007\uffdf" +
    "\011\uffdf\020\uffdf\021\uffdf\037\uffdf\041\uffdf\042\uffdf\044" +
    "\uffdf\045\uffdf\047\uffdf\050\uffdf\053\uffdf\055\uffdf\056\uffdf" +
    "\057\uffdf\060\uffdf\061\uffdf\062\uffdf\063\uffdf\064\uffdf\001" +
    "\002\000\010\010\uffd9\011\uffd9\012\043\001\002\000\004" +
    "\011\206\001\002\000\056\004\uffe3\006\uffe3\007\uffe3\011" +
    "\uffe3\020\uffe3\021\uffe3\037\uffe3\041\uffe3\042\uffe3\044\uffe3" +
    "\045\uffe3\047\uffe3\050\uffe3\053\uffe3\055\uffe3\056\uffe3\057" +
    "\uffe3\060\uffe3\061\uffe3\062\uffe3\063\uffe3\064\uffe3\001\002" +
    "\000\030\004\066\020\063\021\062\042\057\047\050\050" +
    "\044\056\065\057\064\062\047\063\045\064\053\001\002" +
    "\000\010\005\211\015\072\024\071\001\002\000\052\004" +
    "\066\006\152\011\165\020\063\021\062\037\011\042\057" +
    "\044\160\045\021\047\050\050\044\053\170\055\017\056" +
    "\065\057\064\060\015\061\163\062\047\063\045\064\157" +
    "\001\002\000\056\004\uffdb\006\uffdb\007\uffdb\011\uffdb\020" +
    "\uffdb\021\uffdb\037\uffdb\041\uffdb\042\uffdb\044\uffdb\045\uffdb" +
    "\047\uffdb\050\uffdb\053\uffdb\055\uffdb\056\uffdb\057\uffdb\060" +
    "\uffdb\061\uffdb\062\uffdb\063\uffdb\064\uffdb\001\002\000\056" +
    "\004\uffda\006\uffda\007\uffda\011\uffda\020\uffda\021\uffda\037" +
    "\uffda\041\uffda\042\uffda\044\uffda\045\uffda\047\uffda\050\uffda" +
    "\053\uffda\055\uffda\056\uffda\057\uffda\060\uffda\061\uffda\062" +
    "\uffda\063\uffda\064\uffda\001\002\000\030\004\066\020\063" +
    "\021\062\042\057\047\050\050\044\056\065\057\064\062" +
    "\047\063\045\064\053\001\002\000\010\005\216\015\072" +
    "\024\071\001\002\000\052\004\066\006\152\011\165\020" +
    "\063\021\062\037\011\042\057\044\160\045\021\047\050" +
    "\050\044\053\170\055\017\056\065\057\064\060\015\061" +
    "\163\062\047\063\045\064\157\001\002\000\056\004\uffdd" +
    "\006\uffdd\007\uffdd\011\uffdd\020\uffdd\021\uffdd\037\uffdd\041" +
    "\220\042\uffdd\044\uffdd\045\uffdd\047\uffdd\050\uffdd\053\uffdd" +
    "\055\uffdd\056\uffdd\057\uffdd\060\uffdd\061\uffdd\062\uffdd\063" +
    "\uffdd\064\uffdd\001\002\000\052\004\066\006\152\011\165" +
    "\020\063\021\062\037\011\042\057\044\160\045\021\047" +
    "\050\050\044\053\170\055\017\056\065\057\064\060\015" +
    "\061\163\062\047\063\045\064\157\001\002\000\056\004" +
    "\uffdc\006\uffdc\007\uffdc\011\uffdc\020\uffdc\021\uffdc\037\uffdc" +
    "\041\uffdc\042\uffdc\044\uffdc\045\uffdc\047\uffdc\050\uffdc\053" +
    "\uffdc\055\uffdc\056\uffdc\057\uffdc\060\uffdc\061\uffdc\062\uffdc" +
    "\063\uffdc\064\uffdc\001\002\000\030\004\066\020\063\021" +
    "\062\042\057\047\050\050\044\056\065\057\064\062\047" +
    "\063\045\064\053\001\002\000\010\015\072\016\224\024" +
    "\071\001\002\000\010\012\uffd4\013\uffd4\014\uffd4\001\002" +
    "\000\006\005\ufffb\010\ufffb\001\002\000\004\064\204\001" +
    "\002\000\004\011\uffd6\001\002\000\004\002\ufffc\001\002" +
    "\000\004\006\ufff7\001\002\000\004\002\001\001\002\000" +
    "\004\004\234\001\002\000\016\005\ufffa\037\011\045\021" +
    "\055\017\060\015\064\016\001\002\000\004\005\236\001" +
    "\002\000\004\006\152\001\002\000\022\002\uffff\037\uffff" +
    "\040\uffff\045\uffff\046\uffff\055\uffff\060\uffff\064\uffff\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\235\000\020\002\004\003\007\004\005\007\011\023" +
    "\012\024\013\025\003\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\003" +
    "\007\004\227\007\011\023\012\024\013\025\003\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\024\001\001\000\006" +
    "\010\031\013\026\001\001\000\002\001\001\000\010\023" +
    "\012\024\013\025\034\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\020\035\021\037\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\005\145\006\144\023\012\024\013\025\143\001\001" +
    "\000\022\027\045\030\050\031\051\032\053\033\054\034" +
    "\055\035\057\036\060\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\042\132\001\001\000\004\041\125\001\001\000" +
    "\004\043\112\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\040\072\001\001\000\022\027\045\030\106\031" +
    "\051\032\053\033\054\034\055\035\057\036\105\001\001" +
    "\000\022\027\045\030\104\031\051\032\053\033\054\034" +
    "\055\035\057\036\105\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\027\045\030\050\031\051\032\053\033" +
    "\054\034\055\035\057\036\066\001\001\000\004\040\072" +
    "\001\001\000\002\001\001\000\002\001\001\000\022\027" +
    "\045\030\050\031\051\032\053\033\054\034\055\035\057" +
    "\036\073\001\001\000\002\001\001\000\004\040\072\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\027\045" +
    "\030\050\031\051\032\053\033\054\034\055\035\057\036" +
    "\077\037\100\001\001\000\004\040\072\001\001\000\002" +
    "\001\001\000\002\001\001\000\024\027\045\030\050\031" +
    "\051\032\053\033\054\034\055\035\057\036\077\037\103" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\040" +
    "\072\001\001\000\002\001\001\000\022\027\045\030\050" +
    "\031\051\032\053\033\054\034\055\035\057\036\110\001" +
    "\001\000\004\040\072\001\001\000\002\001\001\000\022" +
    "\027\045\030\050\031\051\032\053\033\122\034\055\035" +
    "\057\036\105\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\027\045\030\050\031\051\032\053\033\054\034" +
    "\055\035\121\036\105\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\041" +
    "\125\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\027\045\030\050\031\051\032\126\033\054\034\055\035" +
    "\057\036\105\001\001\000\004\042\132\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\022\027" +
    "\045\030\050\031\133\032\053\033\054\034\055\035\057" +
    "\036\105\001\001\000\002\001\001\000\024\027\045\030" +
    "\050\031\051\032\053\033\054\034\055\035\057\036\077" +
    "\037\135\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\027\045\030\050\031\051\032\053" +
    "\033\054\034\055\035\057\036\141\001\001\000\004\040" +
    "\072\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\005\145\006\147\023" +
    "\012\024\013\025\143\001\001\000\002\001\001\000\006" +
    "\012\153\015\152\001\001\000\004\016\155\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\036" +
    "\015\166\017\160\022\170\023\012\024\013\025\163\027" +
    "\045\030\050\031\051\032\053\033\054\034\055\035\057" +
    "\036\161\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\040\072\001\001\000\002\001\001" +
    "\000\006\020\035\021\204\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\027\045\030\050" +
    "\031\051\032\053\033\054\034\055\035\057\036\200\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\027\045\030\050\031\051\032\053\033\054\034" +
    "\055\035\057\036\174\001\001\000\004\040\072\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\040\072\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\027\045\030\050\031\051\032\053\033\054\034\055" +
    "\035\057\036\207\001\001\000\004\040\072\001\001\000" +
    "\036\015\166\017\211\022\170\023\012\024\013\025\163" +
    "\027\045\030\050\031\051\032\053\033\054\034\055\035" +
    "\057\036\161\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\027\045\030\050\031\051\032\053\033\054\034" +
    "\055\035\057\036\214\001\001\000\004\040\072\001\001" +
    "\000\036\015\166\017\216\022\170\023\012\024\013\025" +
    "\163\027\045\030\050\031\051\032\053\033\054\034\055" +
    "\035\057\036\161\001\001\000\002\001\001\000\036\015" +
    "\166\017\220\022\170\023\012\024\013\025\163\027\045" +
    "\030\050\031\051\032\053\033\054\034\055\035\057\036" +
    "\161\001\001\000\002\001\001\000\022\027\045\030\050" +
    "\031\051\032\053\033\054\034\055\035\057\036\222\001" +
    "\001\000\004\040\072\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\020\035\021\226\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\005\145\006\234\023\012\024" +
    "\013\025\143\001\001\000\002\001\001\000\004\015\236" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public Latte.Absyn.Program pProgram() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (Latte.Absyn.Program) res.value;
  }

public <B,A extends java.util.LinkedList<? super B>> A cons_(B x, A xs) { xs.addFirst(x); return xs; }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Program EOF 
            {
              Object RESULT =null;
		Location start_valxleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location start_valxright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Program start_val = (Latte.Absyn.Program)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= ListTopDef 
            {
              Latte.Absyn.Program RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.ListTopDef p_1 = (Latte.Absyn.ListTopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ProgramTD(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ProgramTD)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ProgramTD)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ProgramTD)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ProgramTD)RESULT).line_num = -1;
  ((Latte.Absyn.ProgramTD)RESULT).col_num = -1;
  ((Latte.Absyn.ProgramTD)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Program",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // TopDef ::= TypeDefinition _IDENT_ _SYMB_0 ListArg _SYMB_1 Block
            {
              Latte.Absyn.TopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Latte.Absyn.Type p_1 = (Latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.ListArg p_4 = (Latte.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Block p_6 = (Latte.Absyn.Block)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.FnDef(p_1,p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((Latte.Absyn.FnDef)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.FnDef)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.FnDef)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.FnDef)RESULT).line_num = -1;
  ((Latte.Absyn.FnDef)RESULT).col_num = -1;
  ((Latte.Absyn.FnDef)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TopDef",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // TopDef ::= ClassHeader _SYMB_2 ListFieldDeclaration _SYMB_3 
            {
              Latte.Absyn.TopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Latte.Absyn.ClassHeader p_1 = (Latte.Absyn.ClassHeader)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.ListFieldDeclaration p_3 = (Latte.Absyn.ListFieldDeclaration)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ClassDecl(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ClassDecl)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ClassDecl)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ClassDecl)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ClassDecl)RESULT).line_num = -1;
  ((Latte.Absyn.ClassDecl)RESULT).col_num = -1;
  ((Latte.Absyn.ClassDecl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TopDef",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ListTopDef ::= TopDef 
            {
              Latte.Absyn.ListTopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.TopDef p_1 = (Latte.Absyn.TopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ListTopDef(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListTopDef",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ListTopDef ::= TopDef ListTopDef 
            {
              Latte.Absyn.ListTopDef RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.TopDef p_1 = (Latte.Absyn.TopDef)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.ListTopDef p_2 = (Latte.Absyn.ListTopDef)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; p_2.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListTopDef",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Arg ::= TypeDefinition _IDENT_
            {
              Latte.Absyn.Arg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Type p_1 = (Latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ArgTI(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ArgTI)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ArgTI)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ArgTI)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ArgTI)RESULT).line_num = -1;
  ((Latte.Absyn.ArgTI)RESULT).col_num = -1;
  ((Latte.Absyn.ArgTI)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Arg",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // ListArg ::= 
            {
              Latte.Absyn.ListArg RESULT =null;
		 RESULT = new Latte.Absyn.ListArg(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // ListArg ::= Arg 
            {
              Latte.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Arg p_1 = (Latte.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ListArg(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // ListArg ::= Arg _SYMB_4 ListArg 
            {
              Latte.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Arg p_1 = (Latte.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.ListArg p_3 = (Latte.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // ClassHeader ::= _SYMB_28 _IDENT_ 
            {
              Latte.Absyn.ClassHeader RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ClassDec(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ClassDec)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ClassDec)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ClassDec)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ClassDec)RESULT).line_num = -1;
  ((Latte.Absyn.ClassDec)RESULT).col_num = -1;
  ((Latte.Absyn.ClassDec)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ClassHeader",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // ClassHeader ::= _SYMB_34 _IDENT_ 
            {
              Latte.Absyn.ClassHeader RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.InterDec(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.InterDec)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.InterDec)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.InterDec)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.InterDec)RESULT).line_num = -1;
  ((Latte.Absyn.InterDec)RESULT).col_num = -1;
  ((Latte.Absyn.InterDec)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ClassHeader",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // FieldDeclaration ::= Modifier TypeDefinition ListItem _SYMB_5
            {
              Latte.Absyn.FieldDeclaration RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Latte.Absyn.Modifier p_1 = (Latte.Absyn.Modifier)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Type p_2 = (Latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.ListItem p_3 = (Latte.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Dvar(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Dvar)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Dvar)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Dvar)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Dvar)RESULT).line_num = -1;
  ((Latte.Absyn.Dvar)RESULT).col_num = -1;
  ((Latte.Absyn.Dvar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("FieldDeclaration",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // FieldDeclaration ::= Modifier TypeDefinition _IDENT_ _SYMB_0 ListArg _SYMB_1 MethodBody
            {
              Latte.Absyn.FieldDeclaration RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Latte.Absyn.Modifier p_1 = (Latte.Absyn.Modifier)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Latte.Absyn.Type p_2 = (Latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.ListArg p_5 = (Latte.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.MethodBody p_7 = (Latte.Absyn.MethodBody)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Dmth(p_1,p_2,p_3,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Dmth)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Dmth)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Dmth)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Dmth)RESULT).line_num = -1;
  ((Latte.Absyn.Dmth)RESULT).col_num = -1;
  ((Latte.Absyn.Dmth)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("FieldDeclaration",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // ListFieldDeclaration ::= 
            {
              Latte.Absyn.ListFieldDeclaration RESULT =null;
		 RESULT = new Latte.Absyn.ListFieldDeclaration(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListFieldDeclaration",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // ListFieldDeclaration ::= ListFieldDeclaration FieldDeclaration 
            {
              Latte.Absyn.ListFieldDeclaration RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.ListFieldDeclaration p_1 = (Latte.Absyn.ListFieldDeclaration)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.FieldDeclaration p_2 = (Latte.Absyn.FieldDeclaration)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListFieldDeclaration",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // MethodBody ::= _SYMB_5 
            {
              Latte.Absyn.MethodBody RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EmptyMBody();
((Latte.Absyn.EmptyMBody)RESULT).line_num = -1;
((Latte.Absyn.EmptyMBody)RESULT).col_num = -1;
((Latte.Absyn.EmptyMBody)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MethodBody",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // MethodBody ::= Block 
            {
              Latte.Absyn.MethodBody RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Block p_1 = (Latte.Absyn.Block)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.MBody(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.MBody)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.MBody)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.MBody)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.MBody)RESULT).line_num = -1;
  ((Latte.Absyn.MBody)RESULT).col_num = -1;
  ((Latte.Absyn.MBody)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MethodBody",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Modifier ::= _SYMB_31 
            {
              Latte.Absyn.Modifier RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Mfinal();
((Latte.Absyn.Mfinal)RESULT).line_num = -1;
((Latte.Absyn.Mfinal)RESULT).col_num = -1;
((Latte.Absyn.Mfinal)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Modifier",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Modifier ::= _SYMB_38 
            {
              Latte.Absyn.Modifier RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Mpublic();
((Latte.Absyn.Mpublic)RESULT).line_num = -1;
((Latte.Absyn.Mpublic)RESULT).col_num = -1;
((Latte.Absyn.Mpublic)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Modifier",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Modifier ::= _SYMB_37 
            {
              Latte.Absyn.Modifier RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Mprivate();
((Latte.Absyn.Mprivate)RESULT).line_num = -1;
((Latte.Absyn.Mprivate)RESULT).col_num = -1;
((Latte.Absyn.Mprivate)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Modifier",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Modifier ::= _SYMB_40 
            {
              Latte.Absyn.Modifier RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Mstatic();
((Latte.Absyn.Mstatic)RESULT).line_num = -1;
((Latte.Absyn.Mstatic)RESULT).col_num = -1;
((Latte.Absyn.Mstatic)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Modifier",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Modifier ::= 
            {
              Latte.Absyn.Modifier RESULT =null;
		 RESULT = new Latte.Absyn.MEmpty();
((Latte.Absyn.MEmpty)RESULT).line_num = -1;
((Latte.Absyn.MEmpty)RESULT).col_num = -1;
((Latte.Absyn.MEmpty)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Modifier",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // ListModifier ::= 
            {
              Latte.Absyn.ListModifier RESULT =null;
		 RESULT = new Latte.Absyn.ListModifier(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListModifier",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ListModifier ::= ListModifier Modifier 
            {
              Latte.Absyn.ListModifier RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.ListModifier p_1 = (Latte.Absyn.ListModifier)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Modifier p_2 = (Latte.Absyn.Modifier)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListModifier",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Block ::= _SYMB_2 ListStmt _SYMB_3 
            {
              Latte.Absyn.Block RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.ListStmt p_2 = (Latte.Absyn.ListStmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.BlockS(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.BlockS)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.BlockS)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.BlockS)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.BlockS)RESULT).line_num = -1;
  ((Latte.Absyn.BlockS)RESULT).col_num = -1;
  ((Latte.Absyn.BlockS)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Block",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ListStmt ::= 
            {
              Latte.Absyn.ListStmt RESULT =null;
		 RESULT = new Latte.Absyn.ListStmt(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ListStmt ::= ListStmt Stmt 
            {
              Latte.Absyn.ListStmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.ListStmt p_1 = (Latte.Absyn.ListStmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Stmt p_2 = (Latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStmt",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Stmt ::= _SYMB_5 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Empty();
((Latte.Absyn.Empty)RESULT).line_num = -1;
((Latte.Absyn.Empty)RESULT).col_num = -1;
((Latte.Absyn.Empty)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Stmt ::= Block 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Block p_1 = (Latte.Absyn.Block)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.BStmt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.BStmt)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.BStmt)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.BStmt)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.BStmt)RESULT).line_num = -1;
  ((Latte.Absyn.BStmt)RESULT).col_num = -1;
  ((Latte.Absyn.BStmt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Stmt ::= TypeDefinition ListItem _SYMB_5
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Type p_1 = (Latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.ListItem p_2 = (Latte.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Decl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Decl)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Decl)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Decl)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Decl)RESULT).line_num = -1;
  ((Latte.Absyn.Decl)RESULT).col_num = -1;
  ((Latte.Absyn.Decl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Stmt ::= Lhs _SYMB_6 Expr _SYMB_5 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Latte.Absyn.Lhs p_1 = (Latte.Absyn.Lhs)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Ass(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Ass)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Ass)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Ass)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Ass)RESULT).line_num = -1;
  ((Latte.Absyn.Ass)RESULT).col_num = -1;
  ((Latte.Absyn.Ass)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Stmt ::= Lhs _SYMB_7 _SYMB_5 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Lhs p_1 = (Latte.Absyn.Lhs)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Incr(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Incr)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Incr)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Incr)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Incr)RESULT).line_num = -1;
  ((Latte.Absyn.Incr)RESULT).col_num = -1;
  ((Latte.Absyn.Incr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Stmt ::= Lhs _SYMB_8 _SYMB_5 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Lhs p_1 = (Latte.Absyn.Lhs)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Decr(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Decr)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Decr)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Decr)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Decr)RESULT).line_num = -1;
  ((Latte.Absyn.Decr)RESULT).col_num = -1;
  ((Latte.Absyn.Decr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Stmt ::= _SYMB_39 Expr _SYMB_5 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Expr p_2 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Ret(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Ret)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Ret)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Ret)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Ret)RESULT).line_num = -1;
  ((Latte.Absyn.Ret)RESULT).col_num = -1;
  ((Latte.Absyn.Ret)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Stmt ::= _SYMB_39 _SYMB_5 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.VRet();
((Latte.Absyn.VRet)RESULT).line_num = -1;
((Latte.Absyn.VRet)RESULT).col_num = -1;
((Latte.Absyn.VRet)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Stmt ::= _SYMB_32 _SYMB_0 Expr _SYMB_1 Stmt 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Stmt p_5 = (Latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Cond(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Cond)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Cond)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Cond)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Cond)RESULT).line_num = -1;
  ((Latte.Absyn.Cond)RESULT).col_num = -1;
  ((Latte.Absyn.Cond)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Stmt ::= _SYMB_32 _SYMB_0 Expr _SYMB_1 Stmt _SYMB_29 Stmt 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Stmt p_5 = (Latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Stmt p_7 = (Latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.CondElse(p_3,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((Latte.Absyn.CondElse)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.CondElse)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.CondElse)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.CondElse)RESULT).line_num = -1;
  ((Latte.Absyn.CondElse)RESULT).col_num = -1;
  ((Latte.Absyn.CondElse)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Stmt ::= _SYMB_45 _SYMB_0 Expr _SYMB_1 Stmt 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Stmt p_5 = (Latte.Absyn.Stmt)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.While(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((Latte.Absyn.While)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.While)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.While)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.While)RESULT).line_num = -1;
  ((Latte.Absyn.While)RESULT).col_num = -1;
  ((Latte.Absyn.While)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Stmt ::= Expr _SYMB_5 
            {
              Latte.Absyn.Stmt RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.SExp(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.SExp)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.SExp)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.SExp)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.SExp)RESULT).line_num = -1;
  ((Latte.Absyn.SExp)RESULT).col_num = -1;
  ((Latte.Absyn.SExp)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stmt",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Item ::= _IDENT_ 
            {
              Latte.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.NoInit(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.NoInit)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.NoInit)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.NoInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.NoInit)RESULT).line_num = -1;
  ((Latte.Absyn.NoInit)RESULT).col_num = -1;
  ((Latte.Absyn.NoInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Item ::= _IDENT_ _SYMB_6 Expr 
            {
              Latte.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Init(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Init)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Init)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Init)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Init)RESULT).line_num = -1;
  ((Latte.Absyn.Init)RESULT).col_num = -1;
  ((Latte.Absyn.Init)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // ListItem ::= Item 
            {
              Latte.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Item p_1 = (Latte.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ListItem(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",15, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ListItem ::= Item _SYMB_4 ListItem 
            {
              Latte.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Item p_1 = (Latte.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.ListItem p_3 = (Latte.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // Lhs ::= _IDENT_ 
            {
              Latte.Absyn.Lhs RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.VariableRawLhs(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.VariableRawLhs)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.VariableRawLhs)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.VariableRawLhs)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.VariableRawLhs)RESULT).line_num = -1;
  ((Latte.Absyn.VariableRawLhs)RESULT).col_num = -1;
  ((Latte.Absyn.VariableRawLhs)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Lhs",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Lhs ::= _IDENT_ _SYMB_9 Expr _SYMB_10 
            {
              Latte.Absyn.Lhs RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ArrElemLhs(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ArrElemLhs)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ArrElemLhs)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ArrElemLhs)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ArrElemLhs)RESULT).line_num = -1;
  ((Latte.Absyn.ArrElemLhs)RESULT).col_num = -1;
  ((Latte.Absyn.ArrElemLhs)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Lhs",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // BasicTypeDefinition ::= _SYMB_33
            {
              Latte.Absyn.BasicType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Int();
((Latte.Absyn.Int)RESULT).line_num = -1;
((Latte.Absyn.Int)RESULT).col_num = -1;
((Latte.Absyn.Int)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("BasicTypeDefinition",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // BasicTypeDefinition ::= _SYMB_41
            {
              Latte.Absyn.BasicType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Str();
((Latte.Absyn.Str)RESULT).line_num = -1;
((Latte.Absyn.Str)RESULT).col_num = -1;
((Latte.Absyn.Str)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("BasicTypeDefinition",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // BasicTypeDefinition ::= _SYMB_27
            {
              Latte.Absyn.BasicType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Bool();
((Latte.Absyn.Bool)RESULT).line_num = -1;
((Latte.Absyn.Bool)RESULT).col_num = -1;
((Latte.Absyn.Bool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("BasicTypeDefinition",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // BasicTypeDefinition ::= _SYMB_44
            {
              Latte.Absyn.BasicType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Void();
((Latte.Absyn.Void)RESULT).line_num = -1;
((Latte.Absyn.Void)RESULT).col_num = -1;
((Latte.Absyn.Void)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("BasicTypeDefinition",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // TypeName ::= BasicTypeDefinition
            {
              Latte.Absyn.TypeName RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.BasicType p_1 = (Latte.Absyn.BasicType)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.BuiltIn(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.BuiltIn)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.BuiltIn)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.BuiltIn)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.BuiltIn)RESULT).line_num = -1;
  ((Latte.Absyn.BuiltIn)RESULT).col_num = -1;
  ((Latte.Absyn.BuiltIn)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeName",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // TypeName ::= _IDENT_ 
            {
              Latte.Absyn.TypeName RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ClassName(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ClassName)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ClassName)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ClassName)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ClassName)RESULT).line_num = -1;
  ((Latte.Absyn.ClassName)RESULT).col_num = -1;
  ((Latte.Absyn.ClassName)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeName",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // TypeDefinition ::= TypeName _SYMB_11
            {
              Latte.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.TypeName p_1 = (Latte.Absyn.TypeName)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ArrayType(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ArrayType)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ArrayType)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ArrayType)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ArrayType)RESULT).line_num = -1;
  ((Latte.Absyn.ArrayType)RESULT).col_num = -1;
  ((Latte.Absyn.ArrayType)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeDefinition",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // TypeDefinition ::= TypeName
            {
              Latte.Absyn.Type RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.TypeName p_1 = (Latte.Absyn.TypeName)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.TypeNameS(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.TypeNameS)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.TypeNameS)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.TypeNameS)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.TypeNameS)RESULT).line_num = -1;
  ((Latte.Absyn.TypeNameS)RESULT).col_num = -1;
  ((Latte.Absyn.TypeNameS)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeDefinition",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // ListType ::= 
            {
              Latte.Absyn.ListType RESULT =null;
		 RESULT = new Latte.Absyn.ListType(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // ListType ::= TypeDefinition
            {
              Latte.Absyn.ListType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Type p_1 = (Latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ListType(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // ListType ::= TypeDefinition _SYMB_4 ListType
            {
              Latte.Absyn.ListType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Type p_1 = (Latte.Absyn.Type)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.ListType p_3 = (Latte.Absyn.ListType)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListType",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Expr7 ::= _IDENT_ 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EVar(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EVar)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EVar)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EVar)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EVar)RESULT).line_num = -1;
  ((Latte.Absyn.EVar)RESULT).col_num = -1;
  ((Latte.Absyn.EVar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Expr7 ::= _INTEGER_ 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ELitInt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ELitInt)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ELitInt)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ELitInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ELitInt)RESULT).line_num = -1;
  ((Latte.Absyn.ELitInt)RESULT).col_num = -1;
  ((Latte.Absyn.ELitInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Expr7 ::= _SYMB_43 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ELitTrue();
((Latte.Absyn.ELitTrue)RESULT).line_num = -1;
((Latte.Absyn.ELitTrue)RESULT).col_num = -1;
((Latte.Absyn.ELitTrue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Expr7 ::= _SYMB_30 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ELitFalse();
((Latte.Absyn.ELitFalse)RESULT).line_num = -1;
((Latte.Absyn.ELitFalse)RESULT).col_num = -1;
((Latte.Absyn.ELitFalse)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Expr7 ::= _SYMB_42 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EThis();
((Latte.Absyn.EThis)RESULT).line_num = -1;
((Latte.Absyn.EThis)RESULT).col_num = -1;
((Latte.Absyn.EThis)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Expr7 ::= _SYMB_36 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ENull();
((Latte.Absyn.ENull)RESULT).line_num = -1;
((Latte.Absyn.ENull)RESULT).col_num = -1;
((Latte.Absyn.ENull)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Expr7 ::= _IDENT_ _SYMB_0 ListExpr _SYMB_1 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.ListExpr p_3 = (Latte.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EApp(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EApp)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EApp)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EApp)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EApp)RESULT).line_num = -1;
  ((Latte.Absyn.EApp)RESULT).col_num = -1;
  ((Latte.Absyn.EApp)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Expr7 ::= _STRING_ 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EString(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EString)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EString)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EString)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EString)RESULT).line_num = -1;
  ((Latte.Absyn.EString)RESULT).col_num = -1;
  ((Latte.Absyn.EString)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Expr7 ::= _SYMB_35 _IDENT_ 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EConstr(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EConstr)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EConstr)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EConstr)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EConstr)RESULT).line_num = -1;
  ((Latte.Absyn.EConstr)RESULT).col_num = -1;
  ((Latte.Absyn.EConstr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Expr7 ::= _SYMB_0 Expr _SYMB_1 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Expr p_2 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr7",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Expr6 ::= _SYMB_35 _IDENT_ _SYMB_9 Expr _SYMB_10 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Expr p_4 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EArrConstr(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EArrConstr)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EArrConstr)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EArrConstr)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EArrConstr)RESULT).line_num = -1;
  ((Latte.Absyn.EArrConstr)RESULT).col_num = -1;
  ((Latte.Absyn.EArrConstr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Expr6 ::= Expr _SYMB_9 Expr _SYMB_10 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ENDArrAcc(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ENDArrAcc)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ENDArrAcc)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ENDArrAcc)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ENDArrAcc)RESULT).line_num = -1;
  ((Latte.Absyn.ENDArrAcc)RESULT).col_num = -1;
  ((Latte.Absyn.ENDArrAcc)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Expr6 ::= Expr7 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr6",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Expr5 ::= Expr ObjAcc 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.ObjAcc p_2 = (Latte.Absyn.ObjAcc)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EObjAcc(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EObjAcc)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EObjAcc)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EObjAcc)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EObjAcc)RESULT).line_num = -1;
  ((Latte.Absyn.EObjAcc)RESULT).col_num = -1;
  ((Latte.Absyn.EObjAcc)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Expr5 ::= _SYMB_12 Expr6 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_2 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Neg(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Neg)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Neg)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Neg)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Neg)RESULT).line_num = -1;
  ((Latte.Absyn.Neg)RESULT).col_num = -1;
  ((Latte.Absyn.Neg)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Expr5 ::= _SYMB_13 Expr6 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_2 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Not(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.Not)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.Not)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.Not)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.Not)RESULT).line_num = -1;
  ((Latte.Absyn.Not)RESULT).col_num = -1;
  ((Latte.Absyn.Not)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Expr5 ::= Expr6 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr5",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Expr4 ::= Expr4 MulOp Expr5 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.MulOp p_2 = (Latte.Absyn.MulOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EMul(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EMul)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EMul)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EMul)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EMul)RESULT).line_num = -1;
  ((Latte.Absyn.EMul)RESULT).col_num = -1;
  ((Latte.Absyn.EMul)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr4",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Expr4 ::= Expr5 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr4",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Expr3 ::= Expr3 AddOp Expr4 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.AddOp p_2 = (Latte.Absyn.AddOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EAdd(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EAdd)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EAdd)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EAdd)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EAdd)RESULT).line_num = -1;
  ((Latte.Absyn.EAdd)RESULT).col_num = -1;
  ((Latte.Absyn.EAdd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr3",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Expr3 ::= Expr4 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr3",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Expr2 ::= Expr2 RelOp Expr3 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.RelOp p_2 = (Latte.Absyn.RelOp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ERel(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ERel)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ERel)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ERel)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ERel)RESULT).line_num = -1;
  ((Latte.Absyn.ERel)RESULT).col_num = -1;
  ((Latte.Absyn.ERel)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr2",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Expr2 ::= Expr3 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr2",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Expr1 ::= Expr2 _SYMB_14 Expr1 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EAnd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EAnd)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EAnd)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EAnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EAnd)RESULT).line_num = -1;
  ((Latte.Absyn.EAnd)RESULT).col_num = -1;
  ((Latte.Absyn.EAnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr1",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Expr1 ::= Expr2 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr1",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Expr ::= Expr1 _SYMB_15 Expr 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_3 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EOr(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((Latte.Absyn.EOr)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.EOr)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.EOr)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.EOr)RESULT).line_num = -1;
  ((Latte.Absyn.EOr)RESULT).col_num = -1;
  ((Latte.Absyn.EOr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Expr ::= Expr1 
            {
              Latte.Absyn.Expr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Expr",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ListExpr ::= 
            {
              Latte.Absyn.ListExpr RESULT =null;
		 RESULT = new Latte.Absyn.ListExpr(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ListExpr ::= Expr 
            {
              Latte.Absyn.ListExpr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ListExpr(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ListExpr ::= Expr _SYMB_4 ListExpr 
            {
              Latte.Absyn.ListExpr RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Latte.Absyn.Expr p_1 = (Latte.Absyn.Expr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Latte.Absyn.ListExpr p_3 = (Latte.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExpr",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ObjAcc ::= _SYMB_16 _IDENT_ 
            {
              Latte.Absyn.ObjAcc RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ObjFieldAcc(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ObjFieldAcc)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ObjFieldAcc)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ObjFieldAcc)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ObjFieldAcc)RESULT).line_num = -1;
  ((Latte.Absyn.ObjFieldAcc)RESULT).col_num = -1;
  ((Latte.Absyn.ObjFieldAcc)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ObjAcc",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ObjAcc ::= _SYMB_16 _IDENT_ _SYMB_0 ListExpr _SYMB_1 
            {
              Latte.Absyn.ObjAcc RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Latte.Absyn.ListExpr p_4 = (Latte.Absyn.ListExpr)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.ObjMethAcc(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((Latte.Absyn.ObjMethAcc)RESULT).line_num = leftLoc.getLine();
  ((Latte.Absyn.ObjMethAcc)RESULT).col_num = leftLoc.getColumn();
  ((Latte.Absyn.ObjMethAcc)RESULT).offset = leftLoc.getOffset();
} else {
  ((Latte.Absyn.ObjMethAcc)RESULT).line_num = -1;
  ((Latte.Absyn.ObjMethAcc)RESULT).col_num = -1;
  ((Latte.Absyn.ObjMethAcc)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ObjAcc",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // AddOp ::= _SYMB_17 
            {
              Latte.Absyn.AddOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Plus();
((Latte.Absyn.Plus)RESULT).line_num = -1;
((Latte.Absyn.Plus)RESULT).col_num = -1;
((Latte.Absyn.Plus)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("AddOp",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // AddOp ::= _SYMB_12 
            {
              Latte.Absyn.AddOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Minus();
((Latte.Absyn.Minus)RESULT).line_num = -1;
((Latte.Absyn.Minus)RESULT).col_num = -1;
((Latte.Absyn.Minus)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("AddOp",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // MulOp ::= _SYMB_18 
            {
              Latte.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Times();
((Latte.Absyn.Times)RESULT).line_num = -1;
((Latte.Absyn.Times)RESULT).col_num = -1;
((Latte.Absyn.Times)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // MulOp ::= _SYMB_19 
            {
              Latte.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Div();
((Latte.Absyn.Div)RESULT).line_num = -1;
((Latte.Absyn.Div)RESULT).col_num = -1;
((Latte.Absyn.Div)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // MulOp ::= _SYMB_20 
            {
              Latte.Absyn.MulOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.Mod();
((Latte.Absyn.Mod)RESULT).line_num = -1;
((Latte.Absyn.Mod)RESULT).col_num = -1;
((Latte.Absyn.Mod)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("MulOp",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // RelOp ::= _SYMB_21 
            {
              Latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.LTH();
((Latte.Absyn.LTH)RESULT).line_num = -1;
((Latte.Absyn.LTH)RESULT).col_num = -1;
((Latte.Absyn.LTH)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // RelOp ::= _SYMB_22 
            {
              Latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.LE();
((Latte.Absyn.LE)RESULT).line_num = -1;
((Latte.Absyn.LE)RESULT).col_num = -1;
((Latte.Absyn.LE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // RelOp ::= _SYMB_23 
            {
              Latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.GTH();
((Latte.Absyn.GTH)RESULT).line_num = -1;
((Latte.Absyn.GTH)RESULT).col_num = -1;
((Latte.Absyn.GTH)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // RelOp ::= _SYMB_24 
            {
              Latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.GE();
((Latte.Absyn.GE)RESULT).line_num = -1;
((Latte.Absyn.GE)RESULT).col_num = -1;
((Latte.Absyn.GE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // RelOp ::= _SYMB_25 
            {
              Latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.EQU();
((Latte.Absyn.EQU)RESULT).line_num = -1;
((Latte.Absyn.EQU)RESULT).col_num = -1;
((Latte.Absyn.EQU)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // RelOp ::= _SYMB_26 
            {
              Latte.Absyn.RelOp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new Latte.Absyn.NE();
((Latte.Absyn.NE)RESULT).line_num = -1;
((Latte.Absyn.NE)RESULT).col_num = -1;
((Latte.Absyn.NE)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("RelOp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
