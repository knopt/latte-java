package src.Absyn; // Java Package generated by the BNF Converter.

import java.util.function.Function;

public class ELitInt extends Expr implements Positioned {

    public final Integer integer_;
    public int line_num, col_num, offset;

    public ELitInt(Integer p1) {
        integer_ = p1;
    }

    @Override
    public String getPosition() {
        return "(" + line_num + ", " + col_num + ")";
    }

    public boolean equals(Object o) {
        if (this == o) return true;
        if (o instanceof ELitInt) {
            ELitInt x = (ELitInt) o;
            return this.integer_.equals(x.integer_);
        }
        return false;
    }

    public int hashCode() {
        return this.integer_.hashCode();
    }

    public <T> T match(Function<EVar, T> eVar, Function<ELitInt, T> eLitInt, Function<ELitTrue, T> eLitTrue, Function<ELitFalse, T> eLitFalse, Function<EThis, T> eThis, Function<ENull, T> eNull, Function<EApp, T> eApp, Function<EString, T> eString, Function<EConstr, T> eConstr, Function<EArrConstr, T> eArrConstr, Function<ENDArrAcc, T> eNDArrAcc, Function<Neg, T> neg, Function<Not, T> not, Function<EMul, T> eMul, Function<EAdd, T> eAdd, Function<ERel, T> eRel, Function<EAnd, T> eAnd, Function<EOr, T> eOr, Function<EObjAcc, T> eObjAcc, Function<ECast, T> eCast) {
        return eLitInt.apply(this);
    }
}
